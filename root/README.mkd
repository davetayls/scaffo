Philosophy
----------

One of the main underlying philosophies is to use well documented design patterns that are being actively maintained.

Here are the architectural decisions made and how to develop on this project.

### Browser Support

This code should support the following browsers:

 - IE: 7+
 - Firefox: 4+
 - Chrome: Latest
 - Safari: 5+

### HTML

#### General

 - HTML5
 - ID's should __not__ be used for styling purposes

#### Forms

Please structure the form markup inline with the [twitter Bootstrap markup](http://twitter.github.com/bootstrap/base-css.html#forms)


### JavaScript

This project uses the following frameworks as a basis
for keeping the code modular and organised:

 - [jQuery](http://jquery.com)
 - [Require.js](http://requirejs.org/) to build modular code and keep track of dependencies.
 - [Twitter Bootstrap](http://twitter.github.com/bootstrap/index.html)
 - [Backbone](http://backbonejs.org/) to organise models, collections
   and sync
 - [lodash (underscore replacement)](http://lodash.com/#custom-builds)
     - Custom build using backbone
     - minus JST template functionality

           $ lodash backbone minus=template

### CSS

#### Fonts

The icon font is generated by [ico moon](http://icomoon.io/app/) using the SVG files found in the `ui/fonts/icons/svg` directory.

#### Pre-processor

This project uses the [Stylus CSS](http://learnboost.github.com/stylus/) pre-processor.

#### Conventions

 - Follow the [BEM](http://coding.smashingmagazine.com/2012/04/16/a-new-front-end-methodology-bem/) principles

         .blockname {
           ...
         }
         .blockname__element {
           ...
         }
         .blockname--modifier {
           ...
         }

  - Split rules out on to separate lines

_Please base your CSS decisions loosely on the following guidelines:
<https://github.com/csswizardry/CSS-Guidelines>_


Getting Started
---------------

For a new machine setup you will need to have [Node.js](http://nodejs.org/) installed and the Grunt CLI (`$ npm install -g grunt-cli`).

1. Go to the root of the project
2. Install the npm dependencies run `$ npm install`
3. Start the preview server in one console `$ node app`
4. Start the watcher in a separate console `$ grunt dev`

Pre Commit
----------

Before committing any changes you need to run `grunt` from the prototype root to update the production ready assets.

    web/ui-prototype/ $ grunt


Components
-------------------

Take a look through the [project layout](docs/project-layout.md)
details for an in-depth explanation for how to build new UI
templates and components.

It also includes extra components:

 - Custom Select: https://github.com/silviomoreto/bootstrap-select
 - Date Picker: http://www.eyecon.ro/bootstrap-datepicker/

Further documentation
---

Further documentation should be placed in the `docs` folder.


